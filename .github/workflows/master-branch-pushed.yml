name: Master

on:
  push:
  # paths:
  # - "src/"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      ID_TOKEN: ${{ secrets.ID_TOKEN }}
      REFRESH_TOKEN: ${{ secrets.REFRESH_TOKEN }}
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      SCRIPT_ID: ${{ secrets.SCRIPT_ID }}
      DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}
      EXPIRY_DATE: ${{ secrets.EXPIRY_DATE }}
    steps:
      - name: Setup repository
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: yarn install
        run: yarn install --prefer-offline
      - name: Create ~/.clasprc.json
        run: |
          echo $(cat <<-EOS
          {
            "token": {
              "access_token": "${ACCESS_TOKEN}",
              "scope": "https://www.googleapis.com/auth/script.deployments https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/drive.file openid https://www.googleapis.com/auth/service.management https://www.googleapis.com/auth/script.projects https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/drive.metadata.readonly https://www.googleapis.com/auth/logging.read https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/script.webapp.deploy",
              "token_type": "Bearer",
              "id_token": "${ID_TOKEN}",
              "expiry_date": ${EXPIRY_DATE},
              "refresh_token": "${REFRESH_TOKEN}"
            },
            "oauth2ClientSettings": {
              "clientId": "${CLIENT_ID}",
              "clientSecret": "${CLIENT_SECRET}",
              "redirectUri": "http://localhost"
            },
            "isLocalCreds": false
          }
          EOS
          ) > ~/.clasprc.json
      - name: Create ~/.clasp.json
        run: |
          echo $(cat <<-EOS
          {
            "scriptId": "${SCRIPT_ID}",
            "rootDir": "build"
          }
          EOS
          ) > ~/.clasp.json
      - name: Build
        run: npx webpack
      - name: Push
        run: |
          yarn clasp push --force
      - name: Deploy
        run: |
          yarn clasp deploy -i $DEPLOYMENT_ID
